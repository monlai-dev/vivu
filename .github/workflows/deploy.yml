name: CI/CD Build and Deploy to EC2

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: monlaine123/vivu:latest

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: 🧾 Checkout repository
        uses: actions/checkout@v3

      - name: 🐳 Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: 🏗️ Build Docker image
        run: docker build --platform=linux/amd64 -t $IMAGE_NAME .

      - name: 🚀 Push Docker image to Docker Hub
        run: docker push $IMAGE_NAME

  deploy-to-ec2:
    runs-on: ubuntu-latest
    needs: build-and-deploy  # Wait until build job is done
    environment: staging

    steps:
      - name: 🔐 Set up SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: 🛰️ Deploy to EC2 via SSH
        shell: bash
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          REPO_URL: ${{ secrets.REPO_URL }}
          RDS_CONNECTION: ${{ secrets.RDS_CONNECTION }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          PORT:             8080
        run: |
          ssh -o StrictHostKeyChecking=no "$EC2_HOST" <<EOF
          set -e
          
          echo "🐳 Ensuring Docker is running"
          sudo dnf -y update
          sudo dnf -y install docker docker-compose-plugin
          sudo systemctl enable --now docker
          sudo usermod -aG docker ec2-user || true

          echo "📦 Installing docker-compose if missing"
          if ! command -v docker-compose &> /dev/null; then
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-\$(uname -s)-\$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi

          echo "🔐 Logging in to Docker Hub"
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

          echo "🧾 Writing .env file"
          cat > .env <<EOT
          ENV=$ENV
          REDIS_URL=$REDIS_URL
          RDS_CONNECTION=$RDS_CONNECTION
          
          EOT
          
          echo "🛠 Installing jq if it's missing"
          if ! command -v jq &> /dev/null; then
          sudo yum install -y jq || sudo apt-get install -y jq
          fi
          
          # docker-compose.yml (no repo required)
          cat > docker-compose.yml <<YML
          services:
            app:
              image: ${IMAGE_NAME}
              container_name: vivu
              env_file: .env
              ports:
                - "${PORT}:${PORT}"
              restart: unless-stopped
          YML
          
          echo "🚀 Starting services using Docker Compose"
          docker-compose pull
          docker-compose up -d --remove-orphans --build
          EOF